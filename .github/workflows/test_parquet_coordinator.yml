name: Test Parquet Processing Coordinator

on:
  workflow_dispatch:
    inputs:
      batch_size:
        description: 'Records per batch'
        required: false
        default: '100'
        type: string
      segment_size:
        description: 'Records per workflow (e.g. 10000)'
        required: false
        default: '10000'
        type: string
      total_records:
        description: 'Total records to process'
        required: false
        default: '100000'
        type: string

jobs:
  coordinate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Calculate Segments
        id: segments
        run: |
          python -c "
          import math
          
          total = int('${{ inputs.total_records }}')
          segment = int('${{ inputs.segment_size }}')
          
          segments = []
          for i in range(0, total, segment):
              end = min(i + segment, total)
              segments.append({
                  'start': i,
                  'end': end,
                  'name': f'{i//1000}k-{end//1000}k'
              })
          
          # Output segments for next step
          with open('segments.txt', 'w') as f:
              for s in segments:
                  f.write(f'{s[\"start\"]},{s[\"end\"]},{s[\"name\"]}\n')
          
          print(f'Found {len(segments)} segments')
          "
          
      - name: Trigger Processing Workflows
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const segments = fs.readFileSync('segments.txt', 'utf8')
              .trim()
              .split('\n')
              .map(line => {
                const [start, end, name] = line.split(',');
                return { start, end, name };
              });
            
            console.log(`Launching ${segments.length} processing workflows`);
            
            for (const segment of segments) {
              try {
                await github.rest.actions.createWorkflowDispatch({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  workflow_id: 'test_parquet_processor.yml',
                  ref: 'main',
                  inputs: {
                    start_index: segment.start,
                    total_processed: '0',
                    batch_size: '${{ inputs.batch_size }}',
                    max_records: (parseInt(segment.end) - parseInt(segment.start)).toString(),
                    segment_name: segment.name
                  }
                });
                console.log(`Launched workflow for segment ${segment.name}`);
                
                // Wait 10 seconds between launches to avoid rate limits
                await new Promise(resolve => setTimeout(resolve, 10000));
              } catch (error) {
                console.error(`Error launching segment ${segment.name}:`, error);
              }
            } 
